# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

version: 0.2

phases:
  pre_build:
    commands:
      - echo Checking for build type
      - echo "Logging in to Docker Hub..."
      - echo "docker username is $DOCKER_HUB_USERNAME"
      - echo "docker password is $DOCKER_HUB_PASSWORD"
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - |
        if expr "${FOLDER_PATH}" : ".*client*" ; then
          echo "Client build, embedding frontend layer file with ALB backend DNS"
          export VUE_APP_API_ENDPOINT="$SERVER_ALB_URL"
          echo "CREATE .env file in client folder"
          touch  $FOLDER_PATH/.env
          echo "VUE_APP_API_ENDPOINT=http://$SERVER_ALB_URL" >> $FOLDER_PATH/.env
        else
          echo "Server build, adding ECS Task Role to the task definition file"
          sed -i "3i\"taskRoleArn\": \"arn:aws:iam::$AWS_ACCOUNT_ID:role/$ECS_TASK_ROLE\"," ./Infrastructure/Templates/taskdef.json
          echo "CREATE .env file in server folder"
          echo $DB_HOST
          echo $DB_USER
          echo $DB_NAME
          touch  $FOLDER_PATH/app/.env
          echo "DB_HOST=$DB_HOST" >>  $FOLDER_PATH/app/.env
          echo "DB_NAME=$DB_NAME" >>  $FOLDER_PATH/app/.env
          echo "DB_PASSWORD=$DB_PASSWORD" >>  $FOLDER_PATH/app/.env
          echo "DB_USER=$DB_USER" >>  $FOLDER_PATH/app/.env
          echo "SECRET_KEY=$SECRET_KEY" >>  $FOLDER_PATH/app/.env
          echo "ALGORITHM=$ALGORITHM" >>  $FOLDER_PATH/app/.env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=$ACCESS_TOKEN_EXPIRE_MINUTES" >>  $FOLDER_PATH/app/.env
        fi
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPO_URL $FOLDER_PATH
      - docker logout
      # - docker build -t robudex17/cm_api $FOLDER_PATH
   
  post_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPO_URL:$IMAGE_TAG
      # - docker push robudex17/cm_api
      - echo Changing directory to Templates directory
      - cd ./Infrastructure/Templates
      - echo Preparing spec files in new folder
      - mkdir Artifacts
      - cp appspec.yaml Artifacts/appspec.yaml && cp taskdef.json Artifacts/taskdef.json
      - echo Changing directory to the Artifacts directory
      - cd Artifacts
      - echo Preparing artifacts
      - sed -i "s|<TASK_DEFINITION_FAMILY>|$TASK_DEFINITION_FAMILY|g" taskdef.json
      - sed -i "s|<CONTAINER_NAME>|$CONTAINER_NAME|g" appspec.yaml taskdef.json
      - sed -i "s|<SERVICE_PORT>|$SERVICE_PORT|g" appspec.yaml taskdef.json
      - sed -i "s|<ECS_ROLE>|$ECS_ROLE|g" taskdef.json
      - sed -i "s|<ECS_TASK_ROLE>|$ECS_TASK_ROLE|g" taskdef.json
      - sed -i "s|<REPO_URL>|$REPO_URL|g" taskdef.json
      - sed -i "s|<AWS_ACCOUNT_ID>|$AWS_ACCOUNT_ID|g" taskdef.json
      - sed -i "s|<AWS_REGION>|$AWS_REGION|g" taskdef.json

artifacts:
  files:
    - '**/*'
  base-directory: 'Infrastructure/Templates/Artifacts'
  discard-paths: yes
